{"version":3,"sources":["components/Header/Header.js","components/Login/Login.js","components/MessagesList/MessagesList.js","components/ChatInput/ChatInput.js","app/App.js","index.js"],"names":["header","className","Login","props","state","name","localStorage","getItem","value","handleChange","bind","handleSubmit","event","this","setState","target","getLogin","setItem","type","onChange","onClick","Component","MessagesList","animateScroll","scrollToBottom","containerId","messagesText","messages","map","message","key","id","from","formTime","ChatInput","messege","changeHandler","submitHandler","preventDefault","sendMessage","placeholder","ref","input","nameInput","App","socket","login","WebSocket","onopen","console","log","onmessage","receiveMessages","data","onclose","code","reason","text","send","JSON","stringify","newMessages","parse","time","Date","toUTCString","slice","Header","ReactDom","render","document","getElementById"],"mappings":"iWAYeA,G,MARA,kBACb,oCACE,4BAAQC,UAAU,UAChB,wBAAIA,UAAU,eAAd,2BCoCSC,G,kBAtCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,KAAMC,aAAaC,QAAQ,UAAY,QACvCC,MAAOF,aAAaC,QAAQ,UAAY,SAE1C,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,0EAUNE,GACXC,KAAKC,SAAS,CAAEN,MAAOI,EAAMG,OAAOP,QACpCK,KAAKC,SAAS,CAAET,KAAMO,EAAMG,OAAOP,U,qCAInCK,KAAKV,MAAMa,SAASH,KAAKT,MAAMC,MAC/BC,aAAaW,QAAQ,QAArB,UAAiCJ,KAAKT,MAAMC,S,+BAI5C,OACE,oCACE,2BACEJ,UAAU,kBACViB,KAAK,OACLV,MAAOK,KAAKT,MAAMI,MAClBW,SAAUN,KAAKJ,eACjB,2BACER,UAAU,mBACViB,KAAK,SACLV,MAAM,cACNY,QAASP,KAAKF,oB,GAjCJU,c,QCiCLC,G,+LA9BXC,gBAAcC,eAAe,CAC3BC,YAAa,gB,2CAKfZ,KAAKW,mB,+BAGG,IAEFE,EADeb,KAAKV,MAAlBwB,SACsBC,IAAI,SAACC,GACjC,OACE,wBAAIC,IAAKD,EAAQE,GAAI9B,UAAU,WAC7B,uBAAGA,UAAU,gBACX,0BAAMA,UAAU,kBAAkB4B,EAAQG,KAA1C,KACCH,EAAQA,QACT,0BAAM5B,UAAU,gBAAgB4B,EAAQI,cAKhD,OACE,wBAAIhC,UAAU,eAAe8B,GAAG,aAC7BL,O,GA1BkBL,cC4CZa,G,kBA5Cb,aAAe,IAAD,8BACZ,+CACK9B,MAAQ,CACX+B,QAAS,IAEX,EAAKC,cAAgB,EAAKA,cAAc1B,KAAnB,gBACrB,EAAK2B,cAAgB,EAAKA,cAAc3B,KAAnB,gBANT,E,2EASAE,GACZ,IAAMuB,EAAUvB,EAAMG,OAAOP,MAC7BK,KAAKC,SAAS,CACZqB,c,oCAIUvB,GACZA,EAAM0B,iBACNzB,KAAKV,MAAMoC,YAAY1B,KAAKT,MAAM+B,SAClCtB,KAAKC,SAAS,CACZqB,QAAS,O,+BAIH,IAAD,OACP,OACE,0BAAMlC,UAAU,gBACd,8BACEA,UAAU,gBACViB,KAAK,OACLV,MAAOK,KAAKT,MAAM+B,QAClBK,YAAY,wBACZC,IAAK,SAACC,GAAY,EAAKC,UAAYD,GACnCvB,SAAUN,KAAKuB,gBACjB,2BACEnC,UAAU,uBACViB,KAAK,SACLV,MAAM,SACNY,QAASP,KAAKwB,qB,GAvCAhB,cCKHuB,G,kBACnB,aAAe,IAAD,8BACZ,+CACKC,OAAS,GACd,EAAKzC,MAAQ,CACXuB,SAAU,GACVmB,MAAOxC,aAAaC,QAAQ,UAAY,QAE1C,EAAKgC,YAAc,EAAKA,YAAY7B,KAAjB,gBACnB,EAAKM,SAAW,EAAKA,SAASN,KAAd,gBARJ,E,iFAWO,IAAD,OAClBG,KAAKgC,OAAS,IAAIE,UAAU,yBAE5BlC,KAAKgC,OAAOG,OAAS,WACnBC,QAAQC,IAAI,aAGdrC,KAAKgC,OAAOM,UAAY,SAACvC,GACvB,EAAKwC,gBAAgBxC,EAAMyC,OAG7BxC,KAAKgC,OAAOS,QAAU,SAAU1C,GAC9BqC,QAAQC,IAAR,gBAAqBtC,EAAM2C,KAA3B,qBAA4C3C,EAAM4C,Y,kCAI1CC,GACV5C,KAAKgC,OAAOa,KAAKC,KAAKC,UAAU,CAC9B5B,KAAMnB,KAAKT,MAAM0C,MACjBjB,QAAS4B,O,sCAIGJ,GACd,IAAMQ,EAAcF,KAAKG,MAAMT,GAAMzB,IAAI,YAAkC,IAA/BI,EAA8B,EAA9BA,KAAMH,EAAwB,EAAxBA,QAASE,EAAe,EAAfA,GAAIgC,EAAW,EAAXA,KAE7D,MAAO,CACL/B,OACAH,UACAE,KACAE,SALe,IAAI+B,KAAKD,GAAME,cAAcC,MAAM,GAAI,OAQ1DrD,KAAKC,SAAS,YAAmB,IAAhBa,EAAe,EAAfA,SACf,MAAO,CACLA,SAAS,GAAD,mBAAMA,GAAN,YAAmBkC,S,+BAKxBf,GACPjC,KAAKC,SAAS,CAAEgC,MAAOA,KAAYxC,aAAaC,QAAQ,W,+BAIxD,OACE,oCACE,kBAAC4D,EAAD,MACA,6BAASlE,UAAU,iBACjB,kBAAC,EAAD,CACEe,SAAUH,KAAKG,YAEnB,6BAASf,UAAU,uBACjB,kBAAC,EAAD,CACE0B,SAAUd,KAAKT,MAAMuB,YAEzB,6BAAS1B,UAAU,qBACjB,kBAAC,EAAD,CACEsC,YAAa1B,KAAK0B,oB,GAtEGlB,c,MCFjC+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5f2a2f26.chunk.js","sourcesContent":["import React from 'react';\n\nimport './header.scss';\n\nconst header = () => (\n  <>\n    <header className='header'>\n      <h1 className='header-text'>Chat-RS school 2019</h1>\n    </header>\n  </>\n)\n\nexport default header;\n","import React, { Component } from 'react';\n\nimport './Login.scss';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem('login') || 'Guest',\n      value: localStorage.getItem('login') || 'Guest'\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n    this.setState({ name: event.target.value });\n  }\n\n  handleSubmit() {\n    this.props.getLogin(this.state.name);\n    localStorage.setItem('login', `${this.state.name}`);\n  }\n\n  render() {\n    return (\n      <>\n        <input\n          className='input-user-name'\n          type='text'\n          value={this.state.value}\n          onChange={this.handleChange} />\n        <input\n          className='submit-user-name'\n          type='submit'\n          value='Change name'\n          onClick={this.handleSubmit} />\n      </>\n    )\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { animateScroll } from \"react-scroll\";\n\nimport './MessagesList.scss';\n\nclass MessagesList extends Component {\n  scrollToBottom() {\n    animateScroll.scrollToBottom({\n      containerId: 'chat-list'\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    const { messages } = this.props;\n    const messagesText = messages.map((message) => {\n      return (\n        <li key={message.id} className='message'>\n          <p className='text-message'>\n            <span className='author-message'>{message.from} </span>\n            {message.message}\n            <span className='time-message'>{message.formTime}</span>\n          </p>\n        </li>\n      );\n    });\n    return (\n      <ul className='listMesseges' id='chat-list'>\n        {messagesText}\n      </ul>\n    )\n  }\n}\n\nexport default MessagesList;\n","import React, { Component } from 'react';\n\nimport './ChatInput.scss';\n\nclass ChatInput extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messege: ''\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  changeHandler(event) {\n    const messege = event.target.value;\n    this.setState({\n      messege\n    });\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n    this.props.sendMessage(this.state.messege);\n    this.setState({\n      messege: ''\n    });\n  }\n\n  render() {\n    return (\n      <form className='send-message'>\n        <textarea\n          className='message-input'\n          type='text'\n          value={this.state.messege}\n          placeholder='Type you messeage ...'\n          ref={(input) => { this.nameInput = input; }}\n          onChange={this.changeHandler} />\n        <input\n          className='message-input-submit'\n          type='submit'\n          value='Submit'\n          onClick={this.submitHandler} />\n      </form>\n    )\n  }\n}\n\nexport default ChatInput;\n","import React, { Component } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Login from '../components/Login/Login';\nimport MessagesList from '../components/MessagesList/MessagesList'\nimport ChatInput from '../components/ChatInput/ChatInput';\n\nimport './app.scss';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.socket = '';\n    this.state = {\n      messages: [],\n      login: localStorage.getItem('login') || 'user'\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.getLogin = this.getLogin.bind(this);\n  }\n\n  componentDidMount() {\n    this.socket = new WebSocket('ws://st-chat.shas.tel');\n\n    this.socket.onopen = () => {\n      console.log('Connect!');\n    };\n\n    this.socket.onmessage = (event) => {\n      this.receiveMessages(event.data);\n    };\n\n    this.socket.onclose = function (event) {\n      console.log(`code: ${event.code}. reason: ${event.reason}`);\n    };\n  }\n\n  sendMessage(text) {\n    this.socket.send(JSON.stringify({\n      from: this.state.login,\n      message: text\n    }));\n  }\n\n  receiveMessages(data) {\n    const newMessages = JSON.parse(data).map(({ from, message, id, time }) => {\n      const formTime = new Date(time).toUTCString().slice(16, 25);\n      return {\n        from,\n        message,\n        id,\n        formTime\n      };\n    });\n    this.setState(({ messages }) => {\n      return {\n        messages: [...messages, ...newMessages]\n      };\n    });\n  }\n\n  getLogin(login) {\n    this.setState({ login: login }) || localStorage.getItem('login');\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <section className='wrapper-login'>\n          <Login\n            getLogin={this.getLogin} />\n        </section>\n        <section className='wrapper-messageList'>\n          <MessagesList\n            messages={this.state.messages} />\n        </section>\n        <section className='wrapper-chatInput'>\n          <ChatInput\n            sendMessage={this.sendMessage} />\n        </section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './app/App';\n\nimport './index.scss';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}