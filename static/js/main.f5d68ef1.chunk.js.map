{"version":3,"sources":["components/Header/Header.js","components/Login/Login.js","components/MessagesList/MessagesList.js","components/ChatInput/ChatInput.js","app/App.js","index.js"],"names":["header","className","Login","props","state","name","localStorage","getItem","value","handleChange","bind","handleSubmit","event","this","setState","target","getLogin","setItem","type","onChange","onClick","Component","MessagesList","messagesText","messages","map","message","key","id","from","formTime","ChatInput","messege","changeHandler","submitHandler","preventDefault","sendMessage","placeholder","ref","input","nameInput","App","socket","login","WebSocket","onopen","console","log","onmessage","receiveMessages","data","onclose","code","reason","text","send","JSON","stringify","newMessages","parse","time","Date","toUTCString","slice","Header","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5d68ef1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './header.scss';\r\n\r\nconst header = () => (\r\n  <>\r\n    <header className='header'>\r\n      <h1 className='header-text'>Chat-RS school 2019</h1>\r\n    </header>\r\n  </>\r\n)\r\n\r\nexport default header;\r\n","import React, { Component } from 'react';\n\nimport './Login.scss';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: localStorage.getItem('login') || 'Guest',\n      value: localStorage.getItem('login') || 'Guest'\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n    this.setState({ name: event.target.value });\n  }\n\n  handleSubmit() {\n    this.props.getLogin(this.state.name);\n    localStorage.setItem('login', `${this.state.name}`);\n  }\n\n  render() {\n    return (\n      <>\n        <input\n          className='input-user-name'\n          type='text'\n          value={this.state.value}\n          onChange={this.handleChange} />\n        <input\n          className='submit-user-name'\n          type='submit'\n          value='Change name'\n          onClick={this.handleSubmit} />\n      </>\n    )\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\r\n\r\nimport './MessagesList.scss';\r\n\r\nclass MessagesList extends Component {\r\n  render() {\r\n    const { messages } = this.props;\r\n\r\n    const messagesText = messages.map((message) => {\r\n      return (\r\n        <li key={message.id} className='message'>\r\n          <p className='text-message'>\r\n            <span className='author-message'>{message.from} </span>\r\n            {message.message}\r\n            <span className='time-message'>{message.formTime}</span>\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <ul className='listMesseges'>\r\n        {messagesText}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessagesList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './ChatInput.scss';\r\n\r\nclass ChatInput extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messege: ''\r\n    };\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n  }\r\n\r\n  changeHandler(event) {\r\n    const messege = event.target.value;\r\n    this.setState({\r\n      messege\r\n    });\r\n  }\r\n\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.sendMessage(this.state.messege);\r\n    this.setState({\r\n      messege: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className='send-message'>\r\n        <textarea\r\n          className='message-input'\r\n          type='text'\r\n          value={this.state.messege}\r\n          placeholder='Type you messeage ...'\r\n          ref={(input) => { this.nameInput = input; }}\r\n          onChange={this.changeHandler} />\r\n        <input\r\n          className='message-input-submit'\r\n          type='submit'\r\n          value='Submit'\r\n          onClick={this.submitHandler} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatInput;\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Login from '../components/Login/Login';\r\nimport MessagesList from '../components/MessagesList/MessagesList'\r\nimport ChatInput from '../components/ChatInput/ChatInput';\r\n\r\nimport './app.scss';\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.socket = '';\r\n    this.state = {\r\n      messages: [],\r\n      login: localStorage.getItem('login') || 'user'\r\n    };\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n    this.getLogin = this.getLogin.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.socket = new WebSocket('ws://st-chat.shas.tel');\r\n\r\n    this.socket.onopen = () => {\r\n      console.log('Connect!');\r\n    };\r\n\r\n    this.socket.onmessage = (event) => {\r\n      this.receiveMessages(event.data);\r\n    };\r\n\r\n    this.socket.onclose = function (event) {\r\n      console.log(`code: ${event.code}. reason: ${event.reason}`);\r\n    };\r\n  }\r\n\r\n  sendMessage(text) {\r\n    this.socket.send(JSON.stringify({\r\n      from: this.state.login,\r\n      message: text\r\n    }));\r\n  }\r\n\r\n  receiveMessages(data) {\r\n    const newMessages = JSON.parse(data).map(({ from, message, id, time }) => {\r\n      const formTime = new Date(time).toUTCString().slice(16, 25);\r\n      return {\r\n        from,\r\n        message,\r\n        id,\r\n        formTime\r\n      };\r\n    });\r\n    this.setState(({ messages }) => {\r\n      return {\r\n        messages: [...messages, ...newMessages]\r\n      };\r\n    });\r\n  }\r\n\r\n  getLogin(login) {\r\n    this.setState({ login: login }) || localStorage.getItem('login');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <section className='wrapper-login'>\r\n          <Login\r\n            getLogin={this.getLogin} />\r\n        </section>\r\n        <section className='wrapper-messageList'>\r\n          <MessagesList\r\n            messages={this.state.messages} />\r\n        </section>\r\n        <section className='wrapper-chatInput'>\r\n          <ChatInput\r\n            sendMessage={this.sendMessage} />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './app/App';\r\n\r\nimport './index.scss';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}